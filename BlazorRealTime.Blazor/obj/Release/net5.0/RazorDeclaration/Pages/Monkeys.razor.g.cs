// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BlazorRealTime.Blazor.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 2 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using BlazorRealTime.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using BlazorRealTime.Blazor.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using System.Net.Http.Headers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using BlazorFluentUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/monkeys")]
    public partial class Monkeys : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 78 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
       

    [Inject]
    public ThemeProvider ThemeProvider { get; set; }
    ITheme Theme => ThemeProvider?.Theme;
    public string myStyle = "display:none;";
    static System.Diagnostics.Stopwatch sw = null;
    string url = "https://blazorrealtimeserver.azurewebsites.net/notificationhub";
    public static string limit = "";
    public static double controlledValue = 0;
    public static double controlledMutation = 0;
    public static string monkeys = "";
    HubConnection _connection = null;
    bool isConnected = false;
    string connectionStatus = "Closed";
    private bool? BoundChecked = false;
    bool? Checked;
    bool? Disabled;
    private bool onDismissIsClicked = false;

    static int tid() { return System.Threading.Thread.CurrentThread.ManagedThreadId; }
    protected override void OnInitialized()
    {
        var palette = new DefaultPaletteDark();
        ThemeProvider.UpdateTheme(palette, new DefaultSemanticColorsDark(palette), new DefaultSemanticTextColorsDark(palette));

        base.OnInitialized();
    }

    private void OnDismiss()
    {
        myStyle = "display:none;";
        StateHasChanged();
    }

    private void OnDismissClose()
    {
        myStyle = "display:block;";
        StateHasChanged();
    }

    public static List<TopRequest> notifications = new List<TopRequest>();

    private async Task ConnectToServer()
    {
        _connection = new HubConnectionBuilder()
            .WithUrl(url)
            .Build();

        await _connection.StartAsync();
        isConnected = true;
        connectionStatus = "Connected :-)";

        _connection.Closed += async (s) =>
        {
            isConnected = false;
            connectionStatus = "Disconnected";
            await _connection.StartAsync();
            isConnected = true;
        };

        _connection.On<TopRequest>("notification", m =>
        {
            notifications.Add(m);
            StateHasChanged();
        });
    }

    public static List<string> messages = new List<string>();
    public static int monkeysInput;
    public static string messageInput = "";
    public static bool parallelInput;
    public static int crossoverInput;
    public static int mutationInput;
    public static int alength;
    public static int limitInput;

    bool IsNumber(string text)
    {
        Regex regex = new Regex(@"^[-+]?[0-9]*\.?[0-9]+$");
        return regex.IsMatch(text);
    }

    private async Task Send()
    {
        notifications.Clear();

        if (!(IsNumber(monkeys) || IsNumber(limit)) || messageInput.Length < 1)
        {
            OnDismissClose();
            return;
        }

        mutationInput = Convert.ToInt32(controlledMutation);
        crossoverInput = Convert.ToInt32(controlledValue);
        monkeysInput = Convert.ToInt32(monkeys);
        limitInput = Convert.ToInt32(limit);
        TargetRequest areq = new TargetRequest { id = 44393, parallel = parallelInput, target = messageInput };
        alength = string.IsNullOrEmpty(messageInput) ? 1 : messageInput.Length;
        TryRequest treq = new TryRequest { id = 44393, parallel = parallelInput, monkeys = monkeysInput, length = alength, crossover = crossoverInput, mutation = mutationInput, limit = limitInput };
        sw = new System.Diagnostics.Stopwatch();
        sw.Start();
        PostTarget(areq);
        PostTry(treq);
        //await Http.PostAsJsonAsync("http://localhost:8091/", areq);
        //await Http.PostAsJsonAsync("https://localhost:44393/api/notifications?treq=", treq);
    }

    public static async void PostTarget(TargetRequest t)
    {
        var client = new HttpClient();

        client.BaseAddress = new Uri("https://fitnessapp20210205105606.azurewebsites.net/runtime/webhooks/durabletask/entities/Message/myMessage?op=");

        client.DefaultRequestHeaders.Accept.Clear();
        client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
        client.DefaultRequestHeaders.Add("x-functions-key", "4qiPl9le1Qi6mEEONh6vkhAtKdGpa4tnmcIwFnseVWH9aHlRDrKrkw==");
        client.DefaultRequestHeaders.Accept.Add(
            new MediaTypeWithQualityHeaderValue("text/html"));
        var parallelHTML = new FormUrlEncodedContent(new[]
{
                new KeyValuePair<string, string>("", t.parallel.ToString())
            });
        var targetHTML = new FormUrlEncodedContent(new[]
{
                new KeyValuePair<string, string>("", t.target.ToString())
            });
        var hrm = await client.PostAsJsonAsync("Add", targetHTML);
        hrm = await client.PostAsync("AddParallel", parallelHTML);

        hrm.EnsureSuccessStatusCode();
        return;
    }

    public static async void PostTry(TryRequest t)
    {
        var client = new HttpClient();

        client.BaseAddress = new Uri("https://monkeysapp.azurewebsites.net/api/try?code=EUTIK0k2H1CqhLFXXQkXOIMiATzj/XibVva/3AfpF/6l8XbzrAqePQ==");
        client.DefaultRequestHeaders.Accept.Clear();
        client.DefaultRequestHeaders.Add("x-functions-key", "2aGrT3JgwStwdVa2Iatjqfy5oDlZJIxGnS1G8tDeumXTpPpns33jrQ==");
        client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
        client.DefaultRequestHeaders.Accept.Add(
            new MediaTypeWithQualityHeaderValue("application/json"));

        //WriteLine($"[{tid()}] ... POST /try send {t}");
        var hrm = await client.PostAsJsonAsync("", t);
        hrm.EnsureSuccessStatusCode();
        return;
    }

    public class TargetRequest
    {
        public int id { get; set; }
        public bool parallel { get; set; }
        public string target { get; set; }
        public override string ToString()
        {
            return $"{{{id}, {parallel}, \"{target}\"}}";
        }
    }

    public class TryRequest
    {
        public int id { get; set; }
        public bool parallel { get; set; }
        public int monkeys { get; set; }
        public int length { get; set; }
        public int crossover { get; set; }
        public int mutation { get; set; }
        public int limit { get; set; }
        public override string ToString()
        {
            return $"{{{id}, {parallel}, {monkeys}, {length}, {crossover}, {mutation}, {limit}}}";
        }
    }

    public class TopRequest
    {
        public int id { get; set; }
        public int loop { get; set; }
        public int score { get; set; }
        public string genome { get; set; }
        public override string ToString()
        {
            return $"{{{id}, {loop}, {score}, {genome}}}";
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
