#pragma checksum "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a0a04603e0dde59bf8f3e9f9594d047988d4fab1"
// <auto-generated/>
#pragma warning disable 1591
namespace BlazorRealTime.Blazor.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 2 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using BlazorRealTime.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\_Imports.razor"
using BlazorRealTime.Blazor.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using Microsoft.AspNetCore.SignalR.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using System.Net.Http.Headers;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using BlazorFluentUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using System.Text.RegularExpressions;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using System.ComponentModel.DataAnnotations;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/monkeys")]
    public partial class Monkeys : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<h1 id=\"title-m\">Welcome to SignalR with Blazor</h1>\r\n");
            __builder.AddMarkupContent(1, "<a href=\"https://github.com/DaneLyttinen/cv-website\"><img class=\"git-link\" src=\"images/GitHub-Mark-Light-64px.png\" width=\"64px\" height=\"64px\"></a>\r\n");
            __builder.OpenElement(2, "div");
            __builder.AddAttribute(3, "class", "Form");
            __builder.OpenComponent<BlazorFluentUI.BFUTextField>(4);
            __builder.AddAttribute(5, "Label", "Number of monkeys");
            __builder.AddAttribute(6, "Placeholder", "Enter a integer");
            __builder.AddAttribute(7, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 16 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                         monkeys

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(8, "OnInput", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => monkeys = __value, monkeys))));
            __builder.AddAttribute(9, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<System.String>>>(() => monkeys));
            __builder.CloseComponent();
            __builder.AddMarkupContent(10, "\r\n    ");
            __builder.OpenComponent<BlazorFluentUI.BFUTextField>(11);
            __builder.AddAttribute(12, "Label", "Message");
            __builder.AddAttribute(13, "Placeholder", "Enter a string");
            __builder.AddAttribute(14, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 17 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                               messageInput

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(15, "OnInput", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => messageInput = __value, messageInput))));
            __builder.AddAttribute(16, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<System.String>>>(() => messageInput));
            __builder.CloseComponent();
            __builder.AddMarkupContent(17, "\r\n    ");
            __builder.OpenComponent<BlazorFluentUI.BFUToggle>(18);
            __builder.AddAttribute(19, "OnText", "True!");
            __builder.AddAttribute(20, "OffText", "False!");
            __builder.AddAttribute(21, "Label", "Run the algorithm in parallel(True) or sequential(False).");
            __builder.AddAttribute(22, "Checked", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean?>(
#nullable restore
#line 18 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                              parallelInput

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(23, "CheckedChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.Boolean>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.Boolean>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => parallelInput = __value, parallelInput))));
            __builder.CloseComponent();
            __builder.AddMarkupContent(24, "\r\n    ");
            __builder.OpenComponent<BlazorFluentUI.BFUSlider>(25);
            __builder.AddAttribute(26, "Label", "Crossover");
            __builder.AddAttribute(27, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 21 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                    0

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(28, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 22 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                    100

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(29, "ShowValue", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 23 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                          true

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(30, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#nullable restore
#line 20 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                           controlledValue

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(31, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.Double>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.Double>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => controlledValue = __value, controlledValue))));
            __builder.CloseComponent();
            __builder.AddMarkupContent(32, "\r\n\r\n    ");
            __builder.OpenComponent<BlazorFluentUI.BFUSlider>(33);
            __builder.AddAttribute(34, "Label", "Mutation");
            __builder.AddAttribute(35, "Min", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 27 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                    0

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(36, "Max", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double>(
#nullable restore
#line 28 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                    100

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(37, "ShowValue", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Boolean>(
#nullable restore
#line 29 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                          true

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(38, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Double?>(
#nullable restore
#line 26 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                           controlledMutation

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(39, "ValueChanged", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.Double>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.Double>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => controlledMutation = __value, controlledMutation))));
            __builder.CloseComponent();
            __builder.AddMarkupContent(40, "\r\n    ");
            __builder.OpenComponent<BlazorFluentUI.BFUTextField>(41);
            __builder.AddAttribute(42, "Label", "loop limit");
            __builder.AddAttribute(43, "Placeholder", "Enter a integer");
            __builder.AddAttribute(44, "Value", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.String>(
#nullable restore
#line 30 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                  limit

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(45, "OnInput", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback<System.String>>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create<System.String>(this, Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.CreateInferredEventCallback(this, __value => limit = __value, limit))));
            __builder.AddAttribute(46, "ValueExpression", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<System.Linq.Expressions.Expression<System.Func<System.String>>>(() => limit));
            __builder.CloseComponent();
            __builder.AddMarkupContent(47, "\r\n    ");
            __builder.OpenElement(48, "div");
            __builder.AddAttribute(49, "class", "buttons");
            __builder.OpenElement(50, "button");
            __builder.AddAttribute(51, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 32 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                          Send

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(52, "type", "button");
            __builder.AddAttribute(53, "class", "btn btn-primary");
            __builder.AddAttribute(54, "disabled", 
#nullable restore
#line 32 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                                                 isConnectedSend

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(55, "id", "button-left");
            __builder.AddContent(56, "Send");
            __builder.CloseElement();
            __builder.AddMarkupContent(57, "\r\n        ");
            __builder.OpenElement(58, "button");
            __builder.AddAttribute(59, "class", "btn btn-success");
            __builder.AddAttribute(60, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 33 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                  async () => await ConnectToServer()

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(61, "disabled", 
#nullable restore
#line 33 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                                                                  isConnected

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(62, "id", "button-left");
            __builder.AddContent(63, "Connect");
            __builder.CloseElement();
            __builder.AddMarkupContent(64, "\r\n        ");
            __builder.OpenElement(65, "button");
            __builder.AddAttribute(66, "type", "button");
            __builder.AddAttribute(67, "class", "btn btn-info");
            __builder.AddAttribute(68, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 34 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                             async () => messageInput = "To be or not to be, that is the question"

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(69, "id", "button-left");
            __builder.AddContent(70, "Sample Message");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(71, "\r\n    ");
            __builder.OpenElement(72, "h3");
            __builder.AddAttribute(73, "id", "connection");
            __builder.AddContent(74, "Connection Status: ");
            __builder.AddContent(75, 
#nullable restore
#line 36 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                            connectionStatus

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(76, "\r\n");
            __builder.AddMarkupContent(77, "<div class=\"explaination\"><p>\r\n        \"The infinite monkey theorem states that a monkey hitting keys at random on a typewriter keyboard for an infinite amount of time will almost surely type any given text,\r\n        such as the complete works of William Shakespeare\"\r\n    </p>\r\n    <h3> So I created a genetic algorithm to try this theorem out using C#!</h3>\r\n    <p>\r\n        The number of monkeys will decide on how many randomly generated string genomes will be created on each iteration of the genetic algorithm,\r\n        the more the merrier.\r\n    </p>\r\n    <p>The message is the string that you want the genetic algorithm to try and figure out through different generations of strings.</p>\r\n    <p>\r\n        If you want to run the genetic algorithm in parallel you can (hopefully) see a big change in the utilization of the CPU of which the genetic algorithm is running on.\r\n        Which means the algorithm would execute much much faster.\r\n    </p>\r\n    <p>\r\n        The crossover probability will decide that a pair of parents will cross over their genomes while generating a pair of children. Otherwise the children are identical to their parents.\r\n        So the higher the probability the easier you make it for the algorithm to guess the message\r\n    </p>\r\n    <p>The mutation slider will decide on the probability that a newly generated child will suffer one randomized mutation by changing one random string in that genome.</p>\r\n    <p> the loop limit will set a limit on the number of iterations allowed on the genetic algorithm, if the limit is reached the algorithm will stop even if it hasn\'t calculated the right string</p></div>\r\n\r\n");
            __builder.OpenComponent<BlazorFluentUI.BFUMessageBar>(78);
            __builder.AddAttribute(79, "OnDismiss", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<Microsoft.AspNetCore.Components.EventCallback>(Microsoft.AspNetCore.Components.EventCallback.Factory.Create(this, 
#nullable restore
#line 61 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                          OnDismiss

#line default
#line hidden
#nullable disable
            )));
            __builder.AddAttribute(80, "DismissButtonAriaLabel", "Close");
            __builder.AddAttribute(81, "style", 
#nullable restore
#line 62 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                      myStyle

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(82, "MessageBarType", Microsoft.AspNetCore.Components.CompilerServices.RuntimeHelpers.TypeCheck<BlazorFluentUI.MessageBarType>(
#nullable restore
#line 62 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                                               MessageBarType.Error

#line default
#line hidden
#nullable disable
            ));
            __builder.AddAttribute(83, "ChildContent", (Microsoft.AspNetCore.Components.RenderFragment)((__builder2) => {
                __builder2.AddMarkupContent(84, "\r\n        Please enter a valid integer for monkeys and limit, also ensure there is a message.\r\n    ");
            }
            ));
            __builder.CloseComponent();
            __builder.AddMarkupContent(85, "\r\n\r\n\r\n");
            __builder.OpenElement(86, "ul");
            __builder.AddAttribute(87, "id", "messagesList");
#nullable restore
#line 70 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
     if (notifications.Count == 0 && sent)
    {
        // this is a spinner class provided by https://loading.io/css/ to show progress of the application running
        

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(88, "<div class=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>");
#nullable restore
#line 75 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
    }
    else
    {
        

#line default
#line hidden
#nullable disable
#nullable restore
#line 78 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
         foreach (var item in notifications)
        {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(89, "li");
            __builder.AddContent(90, "Number of   Loops: ");
            __builder.AddContent(91, 
#nullable restore
#line 80 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                    item.loop

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(92, ", Genome Score: ");
            __builder.AddContent(93, 
#nullable restore
#line 80 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                              item.score

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(94, ", Genome string: ");
            __builder.AddContent(95, 
#nullable restore
#line 80 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                                                          item.genome

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
#nullable restore
#line 81 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
            if (item.score == 0)
            {
                sw.Stop();
                var ms = sw.ElapsedMilliseconds;

#line default
#line hidden
#nullable disable
            __builder.OpenElement(96, "li");
            __builder.AddContent(97, "loops: {");
            __builder.AddContent(98, 
#nullable restore
#line 85 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                             item.loop

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(99, "}, millis: {");
            __builder.AddContent(100, 
#nullable restore
#line 85 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
                                                   ms

#line default
#line hidden
#nullable disable
            );
            __builder.AddContent(101, "}\"");
            __builder.CloseElement();
#nullable restore
#line 86 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
            }
        }

#line default
#line hidden
#nullable disable
#nullable restore
#line 87 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
         
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 92 "C:\Users\Dane\source\repos\BlazorRealTime\BlazorRealTime.Blazor\Pages\Monkeys.razor"
       

    [Inject]
    public ThemeProvider ThemeProvider { get; set; }
    ITheme Theme => ThemeProvider?.Theme;
    public string myStyle = "display:none;";
    static System.Diagnostics.Stopwatch sw = null;
    string url = "https://blazorrealtimeserver.azurewebsites.net/notificationhub";
    public static string limit = "";
    public static double controlledValue = 0;
    public static double controlledMutation = 0;
    public static string monkeys = "";
    HubConnection _connection = null;
    bool isConnected = false;
    bool isConnectedSend = true;
    string connectionStatus = "Closed";
    private bool? BoundChecked = false;
    bool? Checked;
    bool? Disabled;
    private bool onDismissIsClicked = false;
    bool sent = false;

    static int tid() { return System.Threading.Thread.CurrentThread.ManagedThreadId; }
    // Change the theme palette of the BlazorFluentUi to dark mode so it's visible with current layout. 
    protected override void OnInitialized()
    {
        var palette = new DefaultPaletteDark();
        ThemeProvider.UpdateTheme(palette, new DefaultSemanticColorsDark(palette), new DefaultSemanticTextColorsDark(palette));

        base.OnInitialized();
    }
    // The two below functions will help the error message hide as it hasn't been properly implemented yet as a fully functional BlazorFluentUi component.
    private void OnDismiss()
    {
        myStyle = "display:none;";
        StateHasChanged();
    }

    private void OnDismissClose()
    {
        myStyle = "display:block;";
        StateHasChanged();
    }

    public static List<TopRequest> notifications = new List<TopRequest>();
    // Connect to the Azure API to handle the requests and display them on the website properly 
    private async Task ConnectToServer()
    {
        _connection = new HubConnectionBuilder()
            .WithUrl(url)
            .Build();
        connectionStatus = "Connecting...";
        await _connection.StartAsync();
        isConnected = true;
        isConnectedSend = false;
        connectionStatus = "Connected!";

        _connection.Closed += async (s) =>
        {
            isConnected = false;
            isConnectedSend = true;
            connectionStatus = "Disconnected";
            await _connection.StartAsync();
            isConnected = true;
            isConnectedSend = false;
        };

        _connection.On<TopRequest>("notification", m =>
        {
            notifications.Add(m);
            StateHasChanged();
        });
    }

    public static List<string> messages = new List<string>();
    public static int monkeysInput;
    public static string messageInput = "";
    public static bool parallelInput;
    public static int crossoverInput;
    public static int mutationInput;
    public static int alength;
    public static int limitInput;

    bool IsNumber(string text)
    {
        Regex regex = new Regex(@"^[-+]?[0-9]*\.?[0-9]+$");
        return regex.IsMatch(text);
    }
    // Create the request classes and send them to start the algoithm and communication between 2 Azure functions 1 durable entity function and an Azure API
    private async Task Send()
    {
        notifications.Clear();
        sent = true;
        if (!(IsNumber(monkeys) || IsNumber(limit)) || messageInput.Length < 1)
        {
            OnDismissClose();
            return;
        }

        mutationInput = Convert.ToInt32(controlledMutation);
        crossoverInput = Convert.ToInt32(controlledValue);
        monkeysInput = Convert.ToInt32(monkeys);
        limitInput = Convert.ToInt32(limit);
        TargetRequest areq = new TargetRequest { id = 44393, parallel = parallelInput, target = messageInput };
        alength = string.IsNullOrEmpty(messageInput) ? 1 : messageInput.Length;
        TryRequest treq = new TryRequest { id = 44393, parallel = parallelInput, monkeys = monkeysInput, length = alength, crossover = crossoverInput, mutation = mutationInput, limit = limitInput };
        var JsonResult = await CheckIfChanged();
        // Check that the durable entity function has actually changed value, sometimes it can take a bit longer than expected to change states and if it hasn't the algorithm won't work properly.
        // So here we will not continue on sending the requests until the durable entity has changed states to the new message.
        PostTarget(areq);
        while (JsonResult.target != messageInput)
        {
            await Task.Delay(500);
            JsonResult = await CheckIfChanged();
        }
        PostTry(treq);
        sw = new System.Diagnostics.Stopwatch();
        sw.Start();
    }
    //This is where we check for the state of the durable Entity through get requests
    async Task<TargetRequest> CheckIfChanged()
    {
        var client = new HttpClient();
        client.BaseAddress = new Uri("https://fitnessapp20210205105606.azurewebsites.net/runtime/webhooks/durabletask/entities/Message/myMessage?code=EUTIK0k2H1CqhLFXXQkXOIMiATzj/XibVva/3AfpF/6l8XbzrAqePQ==&op=Get");
        //client.BaseAddress = new Uri("http://localhost:7071/runtime/webhooks/durabletask/entities/Message/myMessage?code=EUTIK0k2H1CqhLFXXQkXOIMiATzj/XibVva/3AfpF/6l8XbzrAqePQ==&op=Get");
        client.DefaultRequestHeaders.Accept.Clear();
        client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
        client.DefaultRequestHeaders.Add("x-functions-key", "4qiPl9le1Qi6mEEONh6vkhAtKdGpa4tnmcIwFnseVWH9aHlRDrKrkw==");
        client.DefaultRequestHeaders.Accept.Add(
            new MediaTypeWithQualityHeaderValue("application/json"));
        var content = await client.GetAsync("");
        content.EnsureSuccessStatusCode();
        return await content.Content.ReadFromJsonAsync<TargetRequest>();

    }

    public static async void PostTarget(TargetRequest t)
    {
        var client = new HttpClient();

        client.BaseAddress = new Uri("https://fitnessapp20210205105606.azurewebsites.net/api/target?code=EUTIK0k2H1CqhLFXXQkXOIMiATzj/XibVva/3AfpF/6l8XbzrAqePQ==");

        client.DefaultRequestHeaders.Accept.Clear();
        client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
        client.DefaultRequestHeaders.Add("x-functions-key", "4qiPl9le1Qi6mEEONh6vkhAtKdGpa4tnmcIwFnseVWH9aHlRDrKrkw==");
        client.DefaultRequestHeaders.Accept.Add(
            new MediaTypeWithQualityHeaderValue("application/json"));

        var hrm = await client.PostAsJsonAsync("", t);
        hrm.EnsureSuccessStatusCode();
        return;
    }

    public static async void PostTry(TryRequest t)
    {
        var client = new HttpClient();

        client.BaseAddress = new Uri("https://monkeysapp.azurewebsites.net/api/try?code=EUTIK0k2H1CqhLFXXQkXOIMiATzj/XibVva/3AfpF/6l8XbzrAqePQ==");
        client.DefaultRequestHeaders.Accept.Clear();
        client.DefaultRequestHeaders.Add("x-functions-key", "2aGrT3JgwStwdVa2Iatjqfy5oDlZJIxGnS1G8tDeumXTpPpns33jrQ==");
        client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
        client.DefaultRequestHeaders.Accept.Add(
            new MediaTypeWithQualityHeaderValue("application/json"));

        //WriteLine($"[{tid()}] ... POST /try send {t}");
        var hrm = await client.PostAsJsonAsync("", t);
        hrm.EnsureSuccessStatusCode();
        return;
    }

    public class TargetRequest
    {
        public int id { get; set; }
        public bool parallel { get; set; }
        public string target { get; set; }
        public override string ToString()
        {
            return $"{{{id}, {parallel}, \"{target}\"}}";
        }
    }

    public class TryRequest
    {
        public int id { get; set; }
        public bool parallel { get; set; }
        public int monkeys { get; set; }
        public int length { get; set; }
        public int crossover { get; set; }
        public int mutation { get; set; }
        public int limit { get; set; }
        public override string ToString()
        {
            return $"{{{id}, {parallel}, {monkeys}, {length}, {crossover}, {mutation}, {limit}}}";
        }
    }

    public class TopRequest
    {
        public int id { get; set; }
        public int loop { get; set; }
        public int score { get; set; }
        public string genome { get; set; }
        public override string ToString()
        {
            return $"{{{id}, {loop}, {score}, {genome}}}";
        }
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient Http { get; set; }
    }
}
#pragma warning restore 1591
